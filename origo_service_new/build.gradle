buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}
	
    
	dependencies { 
	   classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.4.RELEASE") 
	}
}

ext {
}
apply plugin: "java"
apply plugin: "maven"
apply plugin: "eclipse"
apply plugin: 'spring-boot'

compileJava.options.encoding = 'ISO-8859-1'

sourceCompatibility = 1.8
group = "origo"
version = "1.0"

repositories {
	mavenLocal()
    mavenCentral()
    maven {
     url "http://repo.spring.io/libs-RELEASE"
    }
}

eclipse {
    classpath {
       downloadSources=true
    }
}

sourceSets.all { set ->
    def jarTask = task("${set.name}Jar", type: Jar) {
        baseName = baseName + "-$set.name"
        from set.output
    }

}

sourceSets {
    api
    impl
    test
}

dependencies {
//	compile("org.springframework.boot:spring-boot-starter-web")
	
	// commons collections
	compile("commons-collections:commons-collections:3.2.1")
	
	// Persistence Layer
	compile("org.hibernate:hibernate-entitymanager:4.3.7.Final")
	compile("org.hibernate:hibernate-validator:4.3.1.Final")
	
	// Spring Framework
	compile("org.springframework:spring-aop:4.1.2.RELEASE")
	compile("org.springframework:spring-jdbc:4.1.2.RELEASE")
	compile("org.springframework:spring-tx:4.1.2.RELEASE")
	compile("org.springframework:spring-webmvc:4.1.2.RELEASE")
	compile("org.springframework:spring-orm:4.1.2.RELEASE")
	compile("org.springframework:spring-jms:4.1.2.RELEASE")
	compile("org.springframework:spring-core:4.1.2.RELEASE")
	compile("org.springframework:spring-beans:4.1.2.RELEASE")
	compile("org.springframework:spring-context:4.1.2.RELEASE")
// For Test purpose so used in test compile
//	compile("org.springframework:spring-test:4.1.2.RELEASE")
	
	// For EH Cache 
//	compile("org.springframework:spring-context-support:4.1.2.RELEASE")
	
		
	// MYSQL Connector
	compile("mysql:mysql-connector-java:5.1.6")
	
	// Connection Pooling
	compile("commons-dbcp:commons-dbcp:1.2.2")
	
	// Mongo Java Driver
	compile("org.mongodb:mongo-java-driver:2.10.1")
	
	// Logging with SLF4j and LogBack
	compile("org.slf4j:slf4j-api:1.7.7")
	compile("ch.qos.logback:logback-core:1.1.2")
	runtime("ch.qos.logback:logback-classic:1.1.2")
	
	
    apiCompile 'commons-codec:commons-codec:1.5'
    apiCompile 'commons-collections:commons-collections:3.2'
    
    implCompile sourceSets.api.output
    implCompile 'commons-lang:commons-lang:2.6'
    implCompile 'commons-collections:commons-collections:3.2'

    testCompile 'junit:junit:4.9'
    testCompile 'org.springframework:spring-test:4.1.2.RELEASE'
    
    testCompile sourceSets.api.output
    testCompile sourceSets.impl.output
    
    runtime configurations.apiRuntime
    runtime configurations.implRuntime
}

test {
    systemProperties 'property': 'value'
}

jar {
    from sourceSets.api.output
    from sourceSets.impl.output
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri("${buildDir}/repo"))

            addFilter("main") { artifact, file -> artifact.name == project.name }
            ["api", "impl","test"].each { type ->
                addFilter(type) { artifact, file -> artifact.name.endsWith("-$type") }
                
                // We now have to map our configurations to the correct maven scope for each pom
                ["compile", "runtime"].each { scope ->
                    configuration = configurations[type + scope.capitalize()]
                    ["main", type].each { pomName ->
                        pom(pomName).scopeMappings.addMapping 1, configuration, scope
                    }
                }
            }

        }
    }
}
